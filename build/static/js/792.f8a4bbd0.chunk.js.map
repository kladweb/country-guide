{"version":3,"file":"static/js/792.f8a4bbd0.chunk.js","mappings":"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","sources":["components/Login/Login.tsx","webpack://country-guide_git/./src/components/ModalLogout/modalLogout.scss?7b4d","components/ModalLogout/ModalLogout.tsx","webpack://country-guide_git/./src/components/InputName/inputName.scss?a85f","components/InputName/InputName.tsx","components/UserPage/UserPage.tsx","../node_modules/@firebase/app-compat/src/firebaseApp.ts","../node_modules/@firebase/app-compat/src/errors.ts","../node_modules/@firebase/app-compat/src/firebaseNamespace.ts","../node_modules/@firebase/app-compat/src/firebaseNamespaceCore.ts","../node_modules/@firebase/app-compat/src/logger.ts","../node_modules/@firebase/app-compat/src/index.ts","../node_modules/@firebase/app-compat/src/registerCoreComponents.ts","../node_modules/firebase/compat/app/index.ts","pages/PageLoginLogout.tsx"],"sourcesContent":["import React from \"react\";\nimport './login.scss';\n\ninterface ILoginProps {\n  loginGoogle: () => void;\n}\n\nexport const Login: React.FC<ILoginProps> = ({loginGoogle}) => {\n  return (\n    <button className='loginButton' onClick={loginGoogle}>\n      <img className='google-logo' src=\"/img/shared/google_icon.png\" alt=\"google icon\"/>\n      <span className='google-span'>Login with Google</span>\n    </button>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"highlightColor\":\"#61ff10\",\"accentColor\":\"rgba(20,161,20,.78)\",\"borderColor1\":\"#ff0\",\"colorButton\":\"rgba(246,173,85,.8)\",\"colorMenu1\":\"#b1091d\"};","import React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './modalLogout.scss';\r\n\r\ninterface IModalLogoutProps {\r\n  setShowMod: (show: boolean) => void;\r\n  logoutGoogle: () => void;\r\n  isClearData: boolean;\r\n  deleteUserData: () => void;\r\n}\r\n\r\nexport const ModalLogout: React.FC<IModalLogoutProps> = ({setShowMod, logoutGoogle, isClearData, deleteUserData}) => {\r\n  const nodeRef = React.useRef(null);\r\n  const [closeMod, setCloseMod] = useState(true);\r\n  const [isNextLogout, setNextLogout] = useState(false);\r\n\r\n  //closeMod и setCloseMod используем для анимации (плавного появления) модального окна;\r\n  useEffect(() => {\r\n    setCloseMod(false);\r\n    setNextLogout(false);\r\n  }, []);\r\n\r\n  const onLogout = () => {\r\n    setNextLogout(true);\r\n    setCloseMod(true);\r\n  }\r\n\r\n  const onCloseMod = () => {\r\n    setCloseMod(true);\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      timeout={300}\r\n      nodeRef={nodeRef}\r\n      classNames='land'\r\n      in={!closeMod}\r\n      onExited={() => {\r\n        setShowMod(false);\r\n        if (isNextLogout) {\r\n          if (isClearData) {\r\n            deleteUserData();\r\n          }\r\n          logoutGoogle();\r\n        }\r\n      }}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div ref={nodeRef} className='modal' onClick={() => {\r\n        setCloseMod(true)\r\n      }}>\r\n        <div className='modal-logout' onClick={e => e.stopPropagation()}>\r\n          <span className='button-close material-icons-outlined' onClick={onCloseMod}>close</span>\r\n          {\r\n            (isClearData) ?\r\n              <div className='modal-question'>Do yo want to logout<br/>and clear all data?</div> :\r\n              <div className='modal-question'>Do yo want to logout?</div>\r\n          }\r\n          <button onClick={onLogout}>YES</button>\r\n          <button onClick={onCloseMod}>NO</button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"highlightColor\":\"#61ff10\",\"accentColor\":\"rgba(20,161,20,.78)\",\"borderColor1\":\"#ff0\",\"colorButton\":\"rgba(246,173,85,.8)\",\"colorMenu1\":\"#b1091d\"};","import React, { useState } from \"react\";\nimport { useDatabase } from \"../../hooks/database\";\nimport { setUserName } from \"../../redux/loginUsersSlice\";\nimport { useAppDispatch } from \"../../redux/store\";\nimport './inputName.scss';\n\n\ninterface InputNameProps {\n  userName: string;\n  setInput: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const InputName: React.FC<InputNameProps> = ({userName, setInput}) => {\n  const dispatch = useAppDispatch();\n  const {writeUserName} = useDatabase();\n  const [name, setName] = useState<string>(userName);\n\n  const changeName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  }\n\n  const keyUpAction = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      saveName();\n    }\n  }\n\n  const saveName = () => {\n    setInput(false);\n    if (name !== \"\") {\n      writeUserName(name);\n      dispatch(setUserName(name));\n    }\n  }\n\n  return (\n    <input\n      name='userName'\n      className=\"inputName\"\n      autoFocus\n      type='text'\n      value={name}\n      onChange={changeName}\n      onKeyUp={keyUpAction}\n      onBlur={saveName}\n    />\n  )\n}","import React, { useState } from \"react\";\r\nimport { ModalLogout } from \"../ModalLogout/ModalLogout\";\r\nimport { useDatabase } from \"../../hooks/database\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\r\nimport { setAllowShowVisited } from \"../../redux/loginUsersSlice\";\r\nimport { InputName } from \"../InputName/InputName\";\r\nimport './userPage.scss';\r\n\r\ninterface IUserPageProps {\r\n  logoutGoogle: () => void;\r\n  userName: string;\r\n}\r\n\r\nexport const UserPage: React.FC<IUserPageProps> = ({logoutGoogle, userName}) => {\r\n  const {readAllUsers} = useDatabase();\r\n  const dispatch = useAppDispatch();\r\n  const {writeUserPermissionVisited, writeUserCountries} = useDatabase();\r\n  const isAllowed = useAppSelector(state => state.currUser.isAllowShowVisited);\r\n\r\n  const [isShowMod, setShowMod] = useState(false);\r\n  const [isClearData, setClearData] = useState(false);\r\n  const [isInput, setInput] = useState(false);\r\n\r\n  const openModal = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const userTarget = e.target as HTMLButtonElement;\r\n    if (userTarget.name === 'clear') {\r\n      setClearData(true);\r\n    } else {\r\n      setClearData(false);\r\n    }\r\n    setShowMod(true);\r\n  }\r\n\r\n  const setAllowVisited = () => {\r\n    writeUserPermissionVisited(!isAllowed);\r\n    dispatch(setAllowShowVisited(!isAllowed));\r\n    readAllUsers(dispatch);\r\n  }\r\n\r\n  const deleteUserData = () => {\r\n    writeUserCountries(null);\r\n    writeUserPermissionVisited(null);\r\n    // deleteUserFromApp(); //TODO add this case in future\r\n  }\r\n\r\n  return (\r\n    <div className=\"userPage\">\r\n      {\r\n        (isShowMod) &&\r\n        <ModalLogout\r\n          setShowMod={setShowMod}\r\n          logoutGoogle={logoutGoogle}\r\n          isClearData={isClearData}\r\n          deleteUserData={deleteUserData}\r\n        />\r\n      }\r\n      <div className='userNameWrapper'>\r\n        {\r\n          (isInput) ?\r\n            <InputName userName={userName} setInput={setInput}/> :\r\n            <h2\r\n              className='currentUserName'\r\n              onDoubleClick={() => {\r\n                setInput(true)\r\n              }}\r\n            >\r\n              {userName}\r\n            </h2>\r\n        }\r\n      </div>\r\n      <div className=\"isAllowShowVisited\">\r\n        {\r\n          (isAllowed !== null) &&\r\n          <input className='shareInput' type='checkbox' defaultChecked={isAllowed} onChange={setAllowVisited}/>\r\n        }\r\n        <span className='shareDescription'>allow other users to see the countries I have visited.</span>\r\n      </div>\r\n      <button className='logoutButton' onClick={openModal}>Logout</button>\r\n      <button className='logoutButton logoutClear' name=\"clear\" onClick={openModal}>Logout and clear data</button>\r\n    </div>\r\n  )\r\n}\r\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstantiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { getGlobal } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\ndeclare global {\n  interface Window {\n    firebase: FirebaseNamespace;\n  }\n}\n\ntry {\n  const globals = getGlobal();\n  // Firebase Lite detection\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((globals as any).firebase !== undefined) {\n    logger.warn(`\n      Warning: Firebase is already defined in the global scope. Please make sure\n      Firebase library is only loaded once.\n    `);\n\n    // eslint-disable-next-line\n    const sdkVersion = ((globals as any).firebase as FirebaseNamespace)\n      .SDK_VERSION;\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n      logger.warn(`\n        Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n        You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n        `);\n    }\n  }\n} catch {\n  // ignore errors thrown by getGlobal\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat');\n\nexport default firebase;\n","import { useEffect } from \"react\";\r\nimport { GoogleAuthProvider, signInWithPopup, signOut } from \"firebase/auth\";\r\nimport { auth } from \"../firebase/firebase\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\r\nimport { setCurrUser, setUserName, setUserPhoto } from \"../redux/loginUsersSlice\";\r\nimport { updateFavData } from \"../redux/favCountriesSlice\";\r\nimport { Login } from \"../components/Login/Login\";\r\nimport { UserPage } from \"../components/UserPage/UserPage\";\r\nimport { useDatabase } from \"../hooks/database\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport User = firebase.User;\r\nimport type { ICurrUser } from \"../types/globalTypes\";\r\nimport '../components/Travelers/travelers.scss';\r\n\r\nexport const PageLoginLogout = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {writeUserName, writeUserPhoto} = useDatabase();\r\n  const currUser = useAppSelector(state => state.currUser.currUser);\r\n  const userName = useAppSelector(state => state.currUser.userName);\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  useEffect(() => {\r\n    if (currUser && userName === '') {\r\n      writeUserName(currUser.displayName);\r\n      dispatch(setUserName(currUser.displayName));\r\n    }\r\n    if (currUser) {\r\n      writeUserPhoto(currUser.photoURL);\r\n      dispatch(setUserPhoto(currUser.photoURL));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userName]);\r\n\r\n  const loginGoogle = function () {\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential?.accessToken;\r\n        const getUser = auth.currentUser as User;\r\n        const user: ICurrUser = {\r\n          email: (getUser.email) ? getUser.email : '',\r\n          displayName: (getUser.displayName) ? getUser.displayName : '',\r\n          photoURL: (getUser.photoURL) ? getUser.photoURL : '',\r\n          // uid: getUser.uid,\r\n          uid: (getUser.email) ? getUser.email.replace(/[@.]/g, \"\") : getUser.uid,\r\n        };\r\n        // user.email = getUser.email;\r\n        // user.displayName = getUser.displayName;\r\n        // user.photoUrl = getUser.photoUrl;\r\n        // user.uid = getUser.uid;\r\n        dispatch(setCurrUser({currUser: user}));\r\n        return user.uid;\r\n      })\r\n      .catch((error) => {\r\n        // const errorCode = error.code;\r\n        // const errorMessage = error.message;\r\n        // const email = error.customData.email;\r\n        // const credential = GoogleAuthProvider.credentialFromError(error);\r\n        console.log(error);\r\n        dispatch(updateFavData([]));\r\n      });\r\n  }\r\n\r\n  const logoutGoogle = function () {\r\n    signOut(auth).then(() => {\r\n      console.log('Sign-out successful', auth.currentUser);\r\n      dispatch(setCurrUser({currUser: auth.currentUser}));\r\n      dispatch(updateFavData([]));\r\n    }).catch((error) => {\r\n      console.log('Sign-out error', error);\r\n    });\r\n  }\r\n\r\n  // const deleteUserFromApp = function () {\r\n  //   const user = auth.currentUser;\r\n  //   if (user) {\r\n  //     deleteUser(user).then(() => {\r\n  //       dispatch(setCurrUser({currUser: auth.currentUser}));\r\n  //       dispatch(updateFavData([]));\r\n  //       // User deleted.\r\n  //     }).catch((error) => {\r\n  //       // An error occurred\r\n  //       // ...\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className='travelers'>\r\n      <div className='content'>\r\n        {(currUser) ?\r\n          <UserPage\r\n            logoutGoogle={logoutGoogle}\r\n            userName={userName}\r\n          />\r\n          :\r\n          <Login loginGoogle={loginGoogle}/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Login","_ref","loginGoogle","_jsxs","className","onClick","children","_jsx","src","alt","ModalLogout","setShowMod","logoutGoogle","isClearData","deleteUserData","nodeRef","React","closeMod","setCloseMod","useState","isNextLogout","setNextLogout","useEffect","onCloseMod","CSSTransition","timeout","classNames","in","onExited","mountOnEnter","unmountOnExit","ref","e","stopPropagation","onLogout","InputName","userName","setInput","dispatch","useAppDispatch","writeUserName","useDatabase","name","setName","saveName","setUserName","autoFocus","type","value","onChange","target","onKeyUp","key","onBlur","UserPage","readAllUsers","writeUserPermissionVisited","writeUserCountries","isAllowed","useAppSelector","state","currUser","isAllowShowVisited","isShowMod","setClearData","isInput","openModal","onDoubleClick","defaultChecked","setAllowVisited","setAllowShowVisited","FirebaseAppImpl","constructor","_delegate","firebase","_addComponent","Component","this","container","automaticDataCollectionEnabled","val","options","delete","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","deleteApp","_getService","instanceIdentifier","arguments","length","undefined","_DEFAULT_ENTRY_NAME","provider","getProvider","isInitialized","_a","getComponent","instantiationMode","initialize","getImmediate","identifier","_removeServiceInstance","clearInstance","component","_addOrOverwriteComponent","toJSON","ERRORS","ERROR_FACTORY","ErrorFactory","firebase$1","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","initializeApp","rawConfig","app","modularAPIs","contains","appCompat","registerVersion","setLogLevel","onLog","SDK_VERSION","registerComponent","componentName","componentNameWithoutCompat","replace","serviceNamespace","appArg","create","appName","serviceProps","deepExtend","prototype","serviceFxn","bind","_len","args","Array","_key","apply","multipleInstances","useAsService","Object","defineProperty","get","keys","map","createFirebaseNamespaceCore","assign","extendNamespace","props","createSubscribe","logger","Logger","globals","getGlobal","warn","sdkVersion","indexOf","variant","PageLoginLogout","writeUserPhoto","GoogleAuthProvider","displayName","photoURL","setUserPhoto","signOut","auth","console","log","setCurrUser","updateFavData","catch","error","signInWithPopup","result","getUser","user","email","uid"],"sourceRoot":""}