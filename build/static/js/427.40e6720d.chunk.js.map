{"version":3,"file":"static/js/427.40e6720d.chunk.js","mappings":"0LAUO,MAAMA,EAAqCC,IAAqC,IAApC,SAACC,EAAQ,QAAEC,EAAO,UAAEC,GAAUH,EAE/E,MAAMI,EAAgBD,EAAUE,KAAI,CAACC,EAA+BC,KAClEC,EAAAA,EAAAA,MAAA,OAAwBC,UAAU,mBAAkBC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,OACEF,UAAU,uBACVG,IAAG,cAAAC,OAAgBP,EAAQQ,KAAI,QAC/BC,IAAKT,EAAQU,QAEfL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,GAAAI,OAAKP,EAAQU,KAAKC,OAAS,GAAK,kBAAoB,IAAKP,SAAEJ,EAAQU,WAP5EV,EAAQQ,QAYpB,OACEN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLjB,SAAUA,EACVC,QAASA,EACTiB,KAAM,MAERR,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,SAC1BT,QAGLU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAC3BN,KAEHO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,uBAAmBC,EAAAA,EAAAA,KAAA,QAAAD,SAAON,EAAca,gBAEnE,E,wBC1CV,MCYaG,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,iBAACC,IAAoBC,EAAAA,EAAAA,KACrBrB,GAAYsB,EAAAA,EAAAA,KAAeC,GAASA,EAAMvB,YAC1CwB,GAAoBF,EAAAA,EAAAA,KAAeC,GAASA,EAAMC,kBAAkBC,eAEpEC,EAA0BC,IAC9B,MAAMC,EAA8C,GAUpD,OATI5B,EAAU6B,MACZ7B,EAAU6B,KAAKC,SAAS3B,IACtBwB,EAAeG,SAASC,IAClB5B,EAAQQ,OAASoB,GACnBH,EAAoBI,KAAK,CAACrB,KAAMR,EAAQQ,KAAME,KAAMV,EAAQU,MAC9D,GACA,IAGCe,CAAmB,EAY5B,OATAK,EAAAA,EAAAA,YACE,KACkC,IAA5BjC,EAAUkC,eACZd,EAAiBF,EAEnB,GAEC,KAGHb,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAA5B,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,eACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAEF,IAA5BP,EAAUkC,gBACX1B,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,SAEIiB,EAAkBtB,KAAKkC,IACrB5B,EAAAA,EAAAA,KAACZ,EAAQ,CAEPE,SAAUsC,EAAStC,SACnBC,QAASqC,EAASC,UAClBrC,UAAW0B,EAAuBU,EAASpC,YAHtCoC,EAASE,gBASzB,ECxDMC,EAAgBA,KAC3B,MAAM,aAACC,IAAgBnB,EAAAA,EAAAA,KACjBH,GAAWC,EAAAA,EAAAA,MAOjB,OALAc,EAAAA,EAAAA,YAAU,KACRO,EAAatB,EAAS,GAErB,KAGDV,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAACS,EAAS,OAER,C","sources":["components/Travelers/Traveler/Traveler.tsx","webpack://country-guide_git/./src/components/Travelers/travelers.scss?02d3","components/Travelers/Travelers.tsx","pages/PageTravelers.tsx"],"sourcesContent":["import { Avatar } from \"../../Avatar/Avatar\";\nimport React from \"react\";\nimport type { ICountriesCodesNames } from \"../Travelers\";\n\ninterface ITravelerProps {\n  userName: string,\n  userUrl: string,\n  countries: ICountriesCodesNames[],\n}\n\nexport const Traveler: React.FC<ITravelerProps> = ({userName, userUrl, countries}) => {\n\n  const countriesList = countries.map((country: ICountriesCodesNames, index) => (\n    <div key={country.code} className=\"traveler-country\">\n      <img\n        className=\"traveler-country-img\"\n        src={`/img/flags/${country.code}.png`}\n        alt={country.name}\n      />\n      <div className=\"traveler-country-name\">\n        <span className={`${country.name.length > 18 ? 'country-name__S' : ''}`}>{country.name}</span>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className=\"traveler\">\n      <div className=\"traveler-head\">\n        <Avatar\n          userName={userName}\n          userUrl={userUrl}\n          size={0.8}\n        />\n        <h3 className=\"traveler-name\">\n          {userName}\n        </h3>\n      </div>\n      <div className=\"traveler-list\">\n        {countriesList}\n      </div>\n      <div className=\"traveler-footer\">\n        <p className=\"traveler-info\">Visited countries: <span>{countriesList.length}</span></p>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"highlightColor\":\"#61ff10\",\"accentColor\":\"rgba(20,161,20,.78)\",\"borderColor1\":\"#ff0\",\"colorButton\":\"rgba(246,173,85,.8)\",\"colorMenu1\":\"#b1091d\"};","import { useEffect } from \"react\";\r\nimport { Traveler } from \"./Traveler/Traveler\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\r\nimport type { IAllUserCountries } from \"../../redux/allUsersCountriesSlice\";\r\nimport type { ICountries } from \"../../types/globalTypes\";\r\nimport { useDatabase } from \"../../hooks/database\";\r\nimport './travelers.scss';\r\n\r\nexport interface ICountriesCodesNames {\r\n  code: string,\r\n  name: string\r\n}\r\n\r\nexport const Travelers = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {readAllCountries} = useDatabase();\r\n  const countries = useAppSelector(state => state.countries);\r\n  const allUsersCountries = useAppSelector(state => state.allUsersCountries.allCountries);\r\n\r\n  const getCountriesCodesNames = (countriesCodes: string[]) => {\r\n    const countriesCodesNames: ICountriesCodesNames[] = [];\r\n    if (countries.data) {\r\n      countries.data.forEach((country: ICountries) => {\r\n        countriesCodes.forEach((countryCode: string) => {\r\n          if (country.code === countryCode) {\r\n            countriesCodesNames.push({code: country.code, name: country.name});\r\n          }\r\n        })\r\n      });\r\n    }\r\n    return countriesCodesNames;\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      if (countries.dataLoadState !== 2) {\r\n        readAllCountries(dispatch);\r\n        // dispatch(countriesLoad);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 className='travellers-title'>TRAVELERS</h2>\r\n      <div className='travellers-content'>\r\n        {\r\n          (countries.dataLoadState === 2) &&\r\n          <>\r\n            {\r\n              allUsersCountries.map((traveler: IAllUserCountries) => (\r\n                <Traveler\r\n                  key={traveler.userId}\r\n                  userName={traveler.userName}\r\n                  userUrl={traveler.userPhoto}\r\n                  countries={getCountriesCodesNames(traveler.countries)}\r\n                />))\r\n            }\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { Travelers } from \"../components/Travelers/Travelers\";\r\nimport { useAppDispatch } from \"../redux/store\";\r\nimport { useDatabase } from \"../hooks/database\";\r\n\r\nexport const PageTravelers = () => {\r\n  const {readAllUsers} = useDatabase();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    readAllUsers(dispatch);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"travelers\">\r\n      <div className=\"content\">\r\n        <Travelers/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Traveler","_ref","userName","userUrl","countries","countriesList","map","country","index","_jsxs","className","children","_jsx","src","concat","code","alt","name","length","Avatar","size","Travelers","dispatch","useAppDispatch","readAllCountries","useDatabase","useAppSelector","state","allUsersCountries","allCountries","getCountriesCodesNames","countriesCodes","countriesCodesNames","data","forEach","countryCode","push","useEffect","dataLoadState","_Fragment","traveler","userPhoto","userId","PageTravelers","readAllUsers"],"sourceRoot":""}